version: '3'

# These are the PRODUCTION defaults for docker-compose.yml
# It is intended to be run in production mode via Docker stack, not docker-compose.
# There are development overrides specified in docker-compose.override.yml, which are intended to be run in docker-compose.
# In addition, your system should have three files for environmental variables, none of which should be committed to git:
#  .env
#  .env.produciton
#  .env.development

services:
  db:
    image: cottagelabs/willow-db
    build: db/
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 250M

  solr:
    image: cottagelabs/willow-solr
    build: solr/
    volumes:
      - solr_home:/solr_home
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 250M
  
  redis:
    image: cottagelabs/willow-redis
    build: redis/
    volumes:
      - redis_data:/data
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 250M

  fedora:
    image: cottagelabs/willow-fedora
    build: fedora_commons/
    env_file: .env
    links:
      - db
    volumes:
       - fcrepo4_home:/fcrepo4_home/
       - fcrepo4_data:/fcrepo4_data/
    depends_on:
      - db
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 500M
  
  willow:
    image: cottagelabs/willow
    build:
      context: willow/
      args:
        - RAILS_ENV=production
    env_file:
      - .env
      - .env.production
      - .env.willow.hosting
    ports:
      - "3000:3000"
    links:
      - redis
      - solr
      - db
      - fedora
    depends_on:
      - fedora
      - db
      - solr
      - redis
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 500M


  geoblacklight:
    image: cottagelabs/willow-geoblacklight
    build:
      context: geoblacklight/
      args:
        - RAILS_ENV=production
    env_file:
      - .env
      - .env.production
    ports:
      - "${GEOBLACKLIGHT_EXPOSED_PORT:-3010}:3010"
    links:
      - solr
      - db
    restart: on-failure
    deploy:
      resources:
        reservations:
          memory: 250M

  nginx:
    image: nginx
    container_name: nginx
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_certs:/etc/nginx/certs
      - nginx_html:/usr/share/nginx/html

  dockergen:
    image: jwilder/docker-gen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    depends_on:
      - nginx
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl

  ssl:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_certs:/etc/nginx/certs
      - nginx_html:/usr/share/nginx/html


volumes:
  redis_data: {}
  fcrepo4_home: {}
  fcrepo4_data: {}
  postgres_data: {}
  solr_home: {}
  nginx_conf: {}
  nginx_vhost: {}
  nginx_certs: {}
  nginx_html: {}
